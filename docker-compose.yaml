services:
  nginx:
    build:
        context: .
        dockerfile: docker/nginx/Dockerfile
    restart: unless-stopped
    ports:
        - "80:80"
    networks:
        - internal
    depends_on:
        - php
  db:
    build:
        context: .
        dockerfile: docker/db/Dockerfile
        args:
            POSTGRES_VERSION: ${POSTGRES_VERSION}
    environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
        - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
        - internal
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
        interval: 5s
        timeout: 5s
        retries: 3
        start_period: 10s
  php:
    build:
        context: .
        dockerfile: docker/php/Dockerfile
    restart: unless-stopped
    depends_on:
        db:
            condition: service_healthy
    networks:
        - internal
  migrations:
      build:
          context: .
          dockerfile: docker/php/Dockerfile
      depends_on:
          db:
            condition: service_healthy
      command: ["php", "bin/console", "doctrine:migrations:migrate", "--no-interaction"]
      networks:
          - internal
  scheduler:
      build:
          context: .
          dockerfile: docker/php/Dockerfile
      restart: unless-stopped
      depends_on:
          db:
              condition: service_healthy
      command: ["cron", "-f"]
      networks:
          - internal

volumes:
    db-data:
networks:
    internal:
        driver: bridge
